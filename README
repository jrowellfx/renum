renum is a simple command-line-utility for renumbering frame sequences that
is often-times needed in CG production.  Surprisingly a decent version of
this command doesn't exist in the public domain, so this version of renum
should fill that need.

renum allows you to renumber sequences with an offset, and optionally adjust
the padding of the frame numbers. renum relies on the util lsseq also having
been installed on your system as renum uses a python library provided by the
lsseq package. Furthermore, renum borrows the syntax of the native output of
lsseq to specify the sequence to be renumbered.  Having this connection to
lsseq makes it pretty easy to run renum, for example, cutting and pasting
output from lsseq to the arguments of renum with appropriate optional
arguments for setting the offset etc.

renum was written to be safe in that it won't overwrite any existing files
(outside of the range of files to be renumbered) during the renumbering.  If
renum finds that by renumbering a sequence it will write over another frame
outside the range specified then it will skip renumbering that sequence
(printing a warning) and go onto the next sequence in the list.  Naturally
there is an option to force renum to overwrite those files if desired.

renum doesn't need to make temporary copies of files during the renumbering
(it does a move of the file), so it's fast.

renum also has a useful extra option to change files of this form:

    <filename>_[n-m].extension

... by replacing the underscore separator to be a dot so that the filenames
become this:

    <filename>.[n-m].extension

which can be done with a zero offset, effectively renaming the files to
replace the underscore separator with a dot. (Which leads to a more readable
filename and frequently standard practice at big studios).

To install renum on your system follow these steps (you need root
privileges).

1) First install the latest version of lsseq on your system.  You can get it
   from jrowellfx's github repo.

2) Download renum-1.000.tar.gz assuming that the latest version is 1.000 (if
   not just grab the latest one).

3) Uncompress the file:
   $ tar -xvf renum-1.000.tar.gz

4) install the command
   $ cd renum-1.000
   $ sudo python setup.py install

5) ...that's it! You should be able to run the commands "renum" now

To test renum try the following:

$ cd ~
$ mkdir tmp
$ cd tmp
$ touch aaa.001.tif aaa.002.tif aaa.003.tif aaa.004.tif aaa.005.tif
$ lsseq -Z
aaa.[001-005].tif
$ renum --verbose --offset 10 aaa.[001-005].tif
aaa.005.tif -> aaa.015.tif
aaa.004.tif -> aaa.014.tif
aaa.003.tif -> aaa.013.tif
aaa.002.tif -> aaa.012.tif
aaa.001.tif -> aaa.011.tif
$ lsseq -Z
aaa.[011-015].tif

Note that if you are using the tcsh then you may get an error from your
shell when you try to run the renum command, that might look something like
this:

% renum -o 10 aaa.[001-005].tif
renum: No match.

In which case you need to "escape" the square brackets as tcsh is using them
for globbing. i.e.; like this:

% renum -v -o 10 aaa.\[001-005\].tif
aaa.005.tif -> aaa.015.tif
aaa.004.tif -> aaa.014.tif
aaa.003.tif -> aaa.013.tif
aaa.002.tif -> aaa.012.tif
aaa.001.tif -> aaa.011.tif

Helpful hint: ditch tcsh! Use bash, it's so much better. :-)

Also try this:

$ renum --help

for much more useful info.

Please contact j a m e s <at> o i c - i n c . n e t with any bug reports,
suggestions or oodles of praise as the case may be.


