#!/bin/bash


export LC_ALL=POSIX

# !!! This script MUST be run from the root of the renum git repo for this to work.
#
REPO_DIR=`pwd`
export PATH=$REPO_DIR:$PATH

unalias lsseq > /dev/null 2>&1
unalias renum > /dev/null 2>&1
unalias rm > /dev/null 2>&1
tmpfile=/tmp/tmpTEST_RENUM.$$

cleanup() {
    /bin/rm $tmpfile > /dev/null 2>&1
    exit 0
}

trap cleanup INT

# Double check sensible REPO_DIR value before removing old testdir
#
if [ -z "$REPO_DIR" ] then
    echo $0: error: REPO_DIR was empty, dangerous recursive rm avoided.
    exit 1
elif [[ "$REPO_DIR" == "/" ]] then
    echo $0: error: REPO_DIR set to root, dangerous recursive rm avoided.
    exit 1
elif [[ "$REPO_DIR" != *renum* ]] then
    echo $0: error: REPO_DIR might not be set to renum repo, dangerous recursive rm avoided.
    exit 1
fi
rm -rf $REPO_DIR/testdir

# Create list of test directories needed.
# Then touch the file names to make testfiles.
# Note: pwd should still be $REPO_DIR
#
cat createTestData/create.?Test.files | sed -e '1,$ s/\/[^\/]*$//' | sort -u > $tmpfile
mkdir -p `cat $tmpfile`
touch `cat createTestData/create.?Test.files`

cat << EOF > $tmpfile
set -f # Turn off globbing
set -x

lsseq -ZRPl testdir

renum

renum --version

renum --help

renum \
    testdir/null/foo.jpg

renum -o 1 \
    testdir/null/foo.jpg

renum -o 1 \
    testdir/null/foo.[bar].jpg

renum -o 1 \
    testdir/null/foo.[a-b].jpg

renum -o 1 \
    testdir/null/foo.[-a-b].jpg

renum -o 1 \
    testdir/null/foo.[-a--b].jpg

renum -o 1 \
    testdir/null/foo.[xx-a-b].jpg

renum -o 1 \
    testdir/c01/c.[011--003].jpg \
    testdir/c02/c.[11-03].jpg

renum -o 30 \
    testdir/a03/a.[0100-0110].jpg

renum -s -o 1 \
    testdir/null/foo.jpg

renum -s -o 1 \
    testdir/null/foo.[bar].jpg

renum -s -o 1 \
    testdir/null/foo.[a-b].jpg

renum -s -o 1 \
    testdir/null/foo.[-a-b].jpg

renum -s -o 1 \
    testdir/null/foo.[-a--b].jpg

renum -s -o 1 \
    testdir/null/foo.[xx-a-b].jpg

renum -s -o 1 \
    testdir/c01/c.[011--003].jpg \
    testdir/c02/c.[11-03].jpg

renum -s -o 30 \
    testdir/a03/a.[0100-0110].jpg

renum -v -o 30 --force \
    testdir/a03/a.[0100-0110].jpg

renum -v -o 20 \
    testdir/a02/a.[0100-0120].jpg

renum -o 100 \
    testdir/a01/a.[0100-0133].jpg

renum -v -o 100 \
    testdir/b01/b.[555].jpg \
    testdir/x01/x.[-11--03].jpg \
    testdir/y01/y.[-011-0002].jpg

lsseq -ZRPl testdir

renum -v -o 10 \
    testdir/a02/a.[0120-0140].jpg 

lsseq -ZRP testdir/a02

renum -v -o -10 \
    testdir/a02/a.[0130-0150].jpg 

lsseq -ZRP testdir/a02

renum --verbose -o -1 --pad 3 \
    testdir/a02/a.[0120-0140].jpg 

lsseq -ZRP testdir/a02

lsseq -ZRPl testdir/d01

renum -v -o 20 \
    testdir/d01/d_[0100-0120].jpg

lsseq -ZRPl testdir/d01

renum -v \
    testdir/d01/d_[0120-0140].jpg

renum -v --replaceUnderscore \
    testdir/d01/d_[0120-0140].jpg

renum -v --replaceUnderscore \
    testdir/e01/e_[5-9999].jpg

renum -v --replaceUnderscore --pad 4 \
    testdir/e02/e_[5-9999].jpg

renum -v --replaceUnderscore --pad 4 \
    testdir/e03/e_[5-10005].jpg

lsseq -ZRPl testdir/d01

lsseq -ZRPl testdir/d02
renum -o 20 \
    testdir/d02/d.[hi]_[0100-0120].jpg
lsseq -ZRPl testdir/d02
renum --replaceUnderscore \
    testdir/d02/d.[hi]_[0120-0140].jpg
lsseq -ZRPl testdir/d02

lsseq -ZRPl testdir/f01
renum -v --pad 4 \
    testdir/f01/f_[05-1005].jpg

set +x
set +f
EOF

source $tmpfile > test_renum.out.new 2>&1
cleanup
